apiVersion: v1
kind: ConfigMap
metadata:
  name: config-server-data
data:
  box-office.yml: |
    server:
      port: 9009

    spring:
      kafka:
        bootstrap-servers: ${HS_BOX_OFFICE_KAFKA_URI}
        consumer:
          max-poll-records: 100
          auto-offset-reset: earliest
      r2dbc:
        url: r2dbc:postgresql://${HS_BOX_OFFICE_DATASOURCE_HOST}:${HS_BOX_OFFICE_DATASOURCE_PORT}/${HS_BOX_OFFICE_DATASOURCE_DATABASE}
        username: ${HS_BOX_OFFICE_DATASOURCE_USERNAME}
        password: ${HS_BOX_OFFICE_DATASOURCE_PASSWORD}

    eureka:
      instance:
        hostname: hs-box-office
      client:
        serviceUrl:
          defaultZone: ${HS_BOX_OFFICE_EUREKA_URI}

    springdoc:
      api-docs:
        path: "/api-docs"
      swagger-ui:
        path: "/swagger-ui"

    db:
      host: ${HS_BOX_OFFICE_DATASOURCE_HOST}
      port: ${HS_BOX_OFFICE_DATASOURCE_PORT}
      database: ${HS_BOX_OFFICE_DATASOURCE_DATABASE}

    management:
      endpoints:
        web:
          exposure:
            include: "*"

    # logging:
    #   level:
    #     org:
    #       springframework:
    #         security: DEBUG
    #         web: DEBUG
    #       hibernate: ERROR
  cms.yml: |
    server:
      port: 8764

    eureka:
      instance:
        hostname: hs-cms
      client:
        service-url:
          defaultZone: ${HS_CMS_EUREKA_URI}

    spring:
      kafka:
        bootstrap-servers: ${HS_CMS_KAFKA_URI}
      datasource:
        url: jdbc:postgresql://${HS_CMS_DATASOURCE_HOST}:${HS_CMS_DATASOURCE_PORT}/${HS_CMS_DATASOURCE_DATABASE}
        username: ${HS_CMS_DATASOURCE_USERNAME}
        password: ${HS_CMS_DATASOURCE_PASSWORD}
        driver-class-name: org.postgresql.Driver
      jpa:
        database-platform: org.hibernate.dialect.PostgreSQLDialect
        properties:
          hibernate:
            dialect: org.hibernate.dialect.PostgreSQLDialect
        hibernate.ddl-auto: none
        show-sql: true

    springdoc:
      api-docs:
        path: "/api-docs"
      swagger-ui:
        path: "/swagger-ui"

    management:
      endpoints:
        web:
          exposure:
            include: "*"

    app:
      hazelcast:
        addresses: ${HS_CMS_HAZELCAST_ADDRESSES}
        cluster-name: ${HS_CMS_HAZELCAST_CLUSTER_NAME:donatello}
        maps:
          paintings-metadata: paintings-metadata

    #logging:
    #  level:
    #    org:
    #      springframework:
    #        security: DEBUG
    #        web: DEBUG
    #      hibernate: ERROR
  eureka.yml: |
    server:
      port: 8761

    eureka:
      instance:
        hostname: localhost
      client:
        registerWithEureka: false
        fetchRegistry: false
        serviceUrl:
          defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
      server:
        renewalPercentThreshold: 0.69
  files-compressor.yml: |
    server:
      port: 8769

    app:
      paintings:
        repository:
          fs:
            mount: ${HS_FILES_PAINTINGS_VOLUME:./paintings}
        client:
          server-urls: ${HS_FILES_CLIENT_SERVER_URLS}
  files.yml: |
    server:
      port: 8767

    eureka:
      instance:
        hostname: hs-files
      client:
        service-url:
          defaultZone: ${HS_FILES_EUREKA_URI}

    springdoc:
      api-docs:
        path: "/api-docs"
      swagger-ui:
        path: "/swagger-ui"

    app:
      paintings:
        repository:
          fs:
            mount: ${HS_FILES_PAINTINGS_VOLUME:./pictures}
            locations:
              raw: "/raw"
              compressed: "/compressed"
      hazelcast:
        addresses: ${HS_FILES_HAZELCAST_ADDRESSES}
        cluster-name: ${HS_FILES_HAZELCAST_CLUSTER_NAME:donatello}
        maps:
          paintings-files-metadata: paintings-files-metadata
          paintings-files-compressed: paintings-files-compressed
          paintings-metadata: paintings-metadata

    spring:
      kafka:
        bootstrap-servers: ${HS_FILES_KAFKA_URI}
        consumer:
          max-poll-records: 100
          auto-offset-reset: earliest

    #logging:
    #  level:
    #    org:
    #      springframework:
    #        security: DEBUG
    #        web: DEBUG
    #      hibernate: ERROR
  gateway.yml: |
    server:
      port: 8762

    eureka:
      cloud:
        gateway:
          discovery:
            locator:
              enabled: true
              lower-case-service-id: true
      instance:
        hostname: hs-gateway
      client:
        service-url:
          defaultZone: ${HS_GATEWAY_EUREKA_URI:http://localhost:8375/eureka}

    reactive:
      feign:
        circuit:
          breaker:
            enabled: false

    spring:
      application:
        name: gateway
      cloud:
        gateway:
          httpclient:
            wiretap: true
          httpserver:
            wiretap: true

          routes:
            - id: users-auth
              uri: lb://users
              predicates:
                - Path=/api/v1/auth/**

            - id: users-users
              uri: lb://users
              predicates:
                - Path=/api/v1/users/**

            - id: users-openapi
              uri: lb://users
              predicates:
                - Path=/users/api-docs
              filters:
                - RewritePath=/users/(?<path>.*), /$\{path}

            - id: files-pictures-inner
              uri: lb://files
              predicates:
                - Path=/api/v1/paintings/{id}/files/**
              filters:
                - RewritePath=/api/v1/paintings/(?<id>.*)/files(?<rest>/.*)?, /api/v1/paintings/${id}${rest}
                - AuthFilter

            - id: files-openapi
              uri: lb://files
              predicates:
                - Path=/files/api-docs
              filters:
                - RewritePath=/files/(?<path>.*), /$\{path}

            - id: cms-artists
              uri: lb://cms
              predicates:
                - Path=/api/v1/artists/**
              filters:
                - AuthFilter

            - id: cms-exhibitions
              uri: lb://cms
              predicates:
                - Path=/api/v1/exhibitions/**
              filters:
                - AuthFilter

            - id: cms-galleries
              uri: lb://cms
              predicates:
                - Path=/api/v1/galleries/**
              filters:
                - AuthFilter

            - id: cms-paintings
              uri: lb://cms
              predicates:
                - Path=/api/v1/paintings/**
              filters:
                - AuthFilter

            - id: cms-recs
              uri: lb://cms
              predicates:
                - Path=/api/v1/recs/**
              filters:
                - AuthFilter

            - id: cms-openapi
              uri: lb://cms
              predicates:
                - Path=/cms/api-docs
              filters:
                - RewritePath=/cms/(?<path>.*), /$\{path}

            - id: box-office-orders
              uri: lb://box-office
              predicates:
                - Path=/api/v1/orders/**
              filters:
                - AuthFilter

            - id: box-office-tickets
              uri: lb://box-office
              predicates:
                - Path=/api/v1/tickets/**
              filters:
                - AuthFilter

            - id: box-office-openapi
              uri: lb://box-office
              predicates:
                - Path=/box-office/api-docs
              filters:
                - RewritePath=/box-office/(?<path>.*), /$\{path}

    springdoc:
      api-docs:
        path: "/api-docs"
      swagger-ui:
        path: "/swagger-ui"
        urls: # explicitly set urls to match gateway filters
          - url: /users/api-docs
            name: API Users microservice
          - url: /cms/api-docs
            name: API CMS microservice
          - url: /box-office/api-docs
            name: API Box Office microservice
          - url: /files/api-docs
            name: API Files microservice
          - url: api-docs
            name: API Gateway microservice

    # logging:
    #   level:
    #     org.springframework.cloud.gateway: DEBUG
    #     reactor.netty.http.client: DEBUG
    #    org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping: trace
    #    io.github.resilience4j: debug
  notifications.yml: |
    server:
      port: 8079

    eureka:
      instance:
        hostname: hs-notifications
      client:
        service-url:
          defaultZone: ${HS_NOTIFICATIONS_EUREKA_URI}

    art-mail:
      mail-subject: ArtGallery Notification

    spring:
      mail:
        host: smtp.mail.ru
        port: 587
        username: artgalleryservice@mail.ru
        password: ${HS_NOTIFICATIONS_MAIL_PASSWORD}
      kafka:
        bootstrap-servers: ${HS_NOTIFICATIONS_KAFKA_URI}
        consumer:
          max-poll-records: 100
          auto-offset-reset: earliest
  users.yml: |
    server:
      port: 8763

    eureka:
      instance:
        hostname: hs-users
      client:
        service-url:
          defaultZone: ${HS_USER_EUREKA_URI}

    spring:
      kafka:
        bootstrap-servers: ${HS_USER_KAFKA_URI}
      datasource:
        url: jdbc:postgresql://${HS_USER_DATASOURCE_HOST}:${HS_USER_DATASOURCE_PORT}/${HS_USER_DATASOURCE_DATABASE}
        username: ${HS_USER_DATASOURCE_USERNAME}
        password: ${HS_USER_DATASOURCE_PASSWORD}
        driver-class-name: org.postgresql.Driver
      jpa:
        database-platform: org.hibernate.dialect.PostgreSQLDialect
        properties:
          hibernate:
            dialect: org.hibernate.dialect.PostgreSQLDialect
        hibernate.ddl-auto: none
        show-sql: true

    application:
      security:
        jwt:
          secret-key: ${HS_USER_JWT_SECRET_KEY}
          expiration: ${HS_USER_JWT_EXPIRATION}


    springdoc:
      api-docs:
        path: "/api-docs"
      swagger-ui:
        path: "/swagger-ui"

    management:
      endpoints:
        web:
          exposure:
            include: "*"
