services:
  config-server:
    image: ${HS_CONFIG_IMAGE:-mhws/hs-config:latest}
    ports:
      - ${HS_CONFIG_PORT:-8888}:8888
    environment:
      HS_CONFIG_SEARCH_LOCATIONS: file:/var/hs/config
    volumes:
      - "./config:/var/hs/config"
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail --silent localhost:8888/actuator/health | grep UP || exit 1" ]
      start_period: 60s
      interval: 10s
      timeout: 60s
      retries: 5

  eureka:
    image: ${HS_EUREKA_IMAGE:-mhws/hs-eureka:latest}
    depends_on:
      config-server:
        condition: service_healthy
    ports:
      - ${HS_EUREKA_PORT:-8761}:8761
    environment:
      CONFIGSERVER_URI: http://config-server:8888
    entrypoint: java -jar application.jar --spring.cloud.config.enabled=true --spring.profiles.active=
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail --silent localhost:8761/actuator/health | grep UP || exit 1" ]
      start_period: 60s
      interval: 10s
      timeout: 60s
      retries: 5

  postgres:
    image: postgres:16.0-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      HS_USER_POSTGRES_DATABASE: db_users
      HS_USER_POSTGRES_USERNAME: ${HS_USERS_POSTGRES_USERNAME}
      HS_USER_POSTGRES_PASSWORD: ${HS_USERS_POSTGRES_PASSWORD}
      HS_CMS_POSTGRES_DATABASE: db_cms
      HS_CMS_POSTGRES_USERNAME: ${HS_CMS_POSTGRES_USERNAME}
      HS_CMS_POSTGRES_PASSWORD: ${HS_CMS_POSTGRES_PASSWORD}
      HS_BOX_POSTGRES_DATABASE: db_box_office
      HS_BOX_POSTGRES_USERNAME: ${HS_BOX_POSTGRES_USERNAME}
      HS_BOX_POSTGRES_PASSWORD: ${HS_BOX_POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./services/postgres/entrypoint/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d db_users && pg_isready -U postgres -d db_cms && pg_isready -U postgres -d db_box_office" ]
      start_period: 60s
      interval: 10s
      timeout: 60s
      retries: 5

  kafka:
    image: docker.io/bitnami/kafka:3.6
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    healthcheck:
      # https://github.com/bitnami/containers/issues/33325#issuecomment-1541443315
      test: kafka-topics.sh --bootstrap-server kafka:9092 --topic hc --create --if-not-exists && kafka-topics.sh --bootstrap-server kafka:9092 --topic hc --describe || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10

  liquibase-users:
    image: liquibase/liquibase:4.24-alpine
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      LIQUIBASE_COMMAND_USERNAME: ${HS_USERS_POSTGRES_USERNAME}
      LIQUIBASE_COMMAND_PASSWORD: ${HS_USERS_POSTGRES_PASSWORD}
      LIQUIBASE_COMMAND_URL : jdbc:postgresql://postgres:5432/db_users
    volumes:
      - ./services/liquibase/changelog:/liquibase/changelog
      - ./services/liquibase/liquibase.users.properties:/liquibase/liquibase.properties
    command: --defaults-file=/liquibase/liquibase.properties update

  hs-users:
    image: ${HS_USERS_IMAGE:-mhws/hs-users:latest}
    depends_on:
      config-server:
        condition: service_healthy
      eureka:
        condition: service_healthy
      liquibase-users:
        condition: service_completed_successfully
    environment:
      HS_USER_EUREKA_URI: http://eureka:8761/eureka
      HS_USER_DATASOURCE_HOST: postgres
      HS_USER_DATASOURCE_PORT: 5432
      HS_USER_DATASOURCE_DATABASE: db_users
      HS_USER_DATASOURCE_USERNAME: ${HS_USERS_POSTGRES_USERNAME}
      HS_USER_DATASOURCE_PASSWORD: ${HS_USERS_POSTGRES_PASSWORD}
      HS_USER_JWT_SECRET_KEY: ${HS_USERS_JWT_SECRET_KEY}
      HS_USER_JWT_EXPIRATION: ${HS_USERS_JWT_EXPIRATION}
      CONFIGSERVER_URI: http://config-server:8888
    entrypoint: java -jar application.jar --spring.cloud.config.enabled=true --spring.profiles.active=
    ports:
      - '8763:8763'

  notifications:
    image: ${HS_NOTIFICATIONS_IMAGE:-mhws/hs-notifications:latest}
    depends_on:
      config-server:
        condition: service_healthy
      eureka:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      HS_NOTIFICATIONS_EUREKA_URI: http://eureka:8761/eureka
      HS_NOTIFICATIONS_KAFKA_URI: http://kafka:9092
      HS_NOTIFICATIONS_MAIL_PASSWORD: ${HS_NOTIFICATIONS_MAIL_PASSWORD}
      CONFIGSERVER_URI: http://config-server:8888
    entrypoint: java -jar application.jar --spring.cloud.config.enabled=true --spring.profiles.active=
    ports:
      - '8079:8079'

  liquibase-cms:
    image: liquibase/liquibase:4.24-alpine
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      LIQUIBASE_COMMAND_USERNAME: ${HS_CMS_POSTGRES_USERNAME}
      LIQUIBASE_COMMAND_PASSWORD: ${HS_CMS_POSTGRES_PASSWORD}
      LIQUIBASE_COMMAND_URL : jdbc:postgresql://postgres:5432/db_cms
    volumes:
      - ./services/liquibase/changelog:/liquibase/changelog
      - ./services/liquibase/liquibase.cms.properties:/liquibase/liquibase.properties
    command: --defaults-file=/liquibase/liquibase.properties update

  hs-cms:
    image: ${HS_CMS_IMAGE:-mhws/hs-cms:latest}
    depends_on:
      config-server:
        condition: service_healthy
      eureka:
        condition: service_healthy
      liquibase-cms:
        condition: service_completed_successfully
    environment:
      HS_CMS_EUREKA_URI: http://eureka:8761/eureka
      HS_CMS_DATASOURCE_HOST: postgres
      HS_CMS_DATASOURCE_PORT: 5432
      HS_CMS_DATASOURCE_DATABASE: db_cms
      HS_CMS_DATASOURCE_USERNAME: ${HS_CMS_POSTGRES_USERNAME}
      HS_CMS_DATASOURCE_PASSWORD: ${HS_CMS_POSTGRES_PASSWORD}
      CONFIGSERVER_URI: http://config-server:8888
    entrypoint: java -jar application.jar --spring.cloud.config.enabled=true --spring.profiles.active=
    ports:
      - '8764:8764'

  liquibase-box-office:
    image: liquibase/liquibase:4.24-alpine
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      LIQUIBASE_COMMAND_USERNAME: ${HS_BOX_POSTGRES_USERNAME}
      LIQUIBASE_COMMAND_PASSWORD: ${HS_BOX_POSTGRES_PASSWORD}
      LIQUIBASE_COMMAND_URL : jdbc:postgresql://postgres:5432/db_box_office
    volumes:
      - ./services/liquibase/changelog:/liquibase/changelog
      - ./services/liquibase/liquibase.box-office.properties:/liquibase/liquibase.properties
    command: --defaults-file=/liquibase/liquibase.properties update

  hs-box-office:
    image: ${HS_BOX_IMAGE:-mhws/hs-box-office:latest}
    depends_on:
      config-server:
        condition: service_healthy
      eureka:
        condition: service_healthy
      liquibase-box-office:
        condition: service_completed_successfully
    environment:
      HS_BOX_OFFICE_EUREKA_URI: http://eureka:8761/eureka
      HS_BOX_OFFICE_DATASOURCE_HOST: postgres
      HS_BOX_OFFICE_DATASOURCE_PORT: 5432
      HS_BOX_OFFICE_DATASOURCE_DATABASE: db_box_office
      HS_BOX_OFFICE_DATASOURCE_USERNAME: ${HS_BOX_POSTGRES_USERNAME}
      HS_BOX_OFFICE_DATASOURCE_PASSWORD: ${HS_BOX_POSTGRES_PASSWORD}
      CONFIGSERVER_URI: http://config-server:8888
    entrypoint: java -jar application.jar --spring.cloud.config.enabled=true --spring.profiles.active=
    ports:
      - '9009:9009'

  hs-files-compressor:
    image: ${HS_FILE_COMPRESSOR_IMAGE:-mhws/hs-files-compressor:latest}
    depends_on:
      config-server:
        condition: service_healthy
      eureka:
        condition: service_healthy
    environment:
      HS_FILES_HOST: hs-files
      HS_FILES_PORT: 8767
      CONFIGSERVER_URI: http://config-server:8888
    volumes:
      - files:/paintings
    entrypoint: java -jar application.jar --spring.cloud.config.enabled=true --spring.profiles.active=
    ports:
      - '8769:8769'

  hs-files:
    image: ${HS_FILES_IMAGE:-mhws/hs-files:latest}
    depends_on:
      config-server:
        condition: service_healthy
      eureka:
        condition: service_healthy
    environment:
      HS_FILES_EUREKA_URI: http://eureka:8761/eureka
      CONFIGSERVER_URI: http://config-server:8888
    volumes:
      - files:/pictures
    entrypoint: java -jar application.jar --spring.cloud.config.enabled=true --spring.profiles.active=
    ports:
      - '8767:8767'

  gateway:
    image: ${HS_GATEWAY_IMAGE:-mhws/hs-gateway:latest}
    depends_on:
      config-server:
        condition: service_healthy
      eureka:
        condition: service_healthy
    ports:
      - ${HS_GATEWAY_PORT:-8762}:8762
    environment:
      HS_GATEWAY_EUREKA_URI: http://eureka:8761/eureka
      CONFIGSERVER_URI: http://config-server:8888
    entrypoint: java -jar application.jar --spring.cloud.config.enabled=true --spring.profiles.active=

volumes:
  postgres-data:
  kafka_data:
  files:
